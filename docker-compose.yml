services:

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file: .env
    depends_on:
      database:
        condition: service_started
      embedding-service:
        condition: service_healthy

  database:
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:3000"
    env_file: .env
    depends_on:
      - backend

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    ports:
      - "${ADMIN_PORT}:3000"
    env_file: .env
    depends_on:
      - backend

  embedding-service:
    build:
      context: ./embedding-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
